version: "3.8"

services:
  # EDFlow AI Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8080:8080"
    environment:
      - DEPLOYMENT_MODE=production
      - API_PORT=8080
      - API_HOST=0.0.0.0
      - LOG_LEVEL=INFO
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    volumes:
      - ./EDFlow AI:/app/EDFlow AI
      - ./api:/app/api
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - edflow-network

  # EDFlow AI Frontend Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_WS_URL=http://localhost:8080
      - VITE_APP_TITLE=EDFlow AI Dashboard
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - edflow-network

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - edflow-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    networks:
      - edflow-network

volumes:
  redis_data:

networks:
  edflow-network:
    driver: bridge
